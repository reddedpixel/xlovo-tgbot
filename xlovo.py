import random
import datetime

GRN = 'üü©'
YLW = 'üü®'
GRY = '‚¨õ'
wordfile = 'words.txt'

def chooseword(seed: int = 0):
    '''
    –í—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ –∏–∑ —á–∏—Å–ª–∞ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö. –ü—Ä–∏ seed=0 –≤—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏–∏.
    :param seed: –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏–∏
    :return: string
    '''
    if seed == 0:
        random.seed()
    else:
        random.seed(a=seed)
    with open(wordfile, 'r', encoding='utf-8') as words:
        wordlist = [a.strip() for a in words.readlines()]
        word = wordlist[random.randrange(len(wordlist))]
    return word


def checkword(guess, answer):
    '''
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π –±—É–∫–≤—ã –≤ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–∏: 0 - –Ω–µ—Ç –≤ —Å–ª–æ–≤–µ, 2 - —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ, 1 - –∏–Ω–∞—á–µ.
    :param guess: –ø—Ä–æ–≤–µ—Ä—è–µ–º–æ–µ —Å–ª–æ–≤–æ
    :param answer: –æ—Ç–≤–µ—Ç
    :return: list
    '''
    guess = guess.lower()
    checklist = []
    with open(wordfile, 'r', encoding='utf-8') as words:
        wordlist = [a.strip() for a in words.readlines()]
        if guess not in wordlist:
            return checklist # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ —Å–ª–æ–≤–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö
    answer = answer.lower()
    checklist = [[x, 0] for x in guess] # —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–∞—Ä (–±—É–∫–≤–∞, –∑–Ω–∞—á–µ–Ω–∏–µ)
    answer_dict = {x: answer.count(x) for x in answer}
    checked_letters = [] # –∏–Ω–¥–µ–∫—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –∏ –ø–æ–º–µ—á–µ–Ω—ã
    for i in range(5):
        if guess[i] == answer[i]:
            checklist[i][1] = 2 # –µ—Å–ª–∏ –±—É–∫–≤–∞ —Å—Ç–æ–∏—Ç –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –º–µ—Å—Ç–µ, —Ç–æ 2
            checked_letters.append(i)
            answer_dict[answer[i]] -= 1
    for i in range(5):
        if i not in checked_letters and answer_dict.get(guess[i],0) > 0: # –µ—Å–ª–∏ –∏–Ω–¥–µ–∫—Å –µ—â–µ –Ω–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω –∏ –æ—Å—Ç–∞–ª–æ—Å—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º –æ–¥–Ω–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ —ç—Ç–æ–π –±—É–∫–≤—ã –≤ –æ—Ç–≤–µ—Ç–µ
            checklist[i][1] = 1
            answer_dict[guess[i]] -= 1
    checklist = [checklist[i][1] for i in range(5)] # –∏–∑–±–∞–≤–ª—è–µ–º—Å—è –æ—Ç –±—É–∫–≤, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏—è
    return checklist


def guessreply(checklist):
    reply = ''
    for check in checklist:
        if check == 2:
            reply += GRN
        elif check == 1:
            reply+=YLW
        else:
            reply+=GRY
    return reply


def getanswer(gametype='new'):
    if gametype == 'new':
        answer = chooseword()
    if gametype == 'daily':
        today = datetime.date.today()
        answer = chooseword(seed=today.toordinal())# –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å–∏–¥–∞ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è —Å 01.01.0001
    return answer

def addword(word : str):
    alphabet = {'–∞','–±','–≤','–≥','–¥','–µ','—ë','–∂','–∑','–∏','–π','–∫','–ª','–º','–Ω','–æ','–ø','—Ä','—Å','—Ç','—É','—Ñ','—Ö','—Ü','—á','—à','—â','—ä','—ã','—å','—ç','—é','—è'}
    word = word.lower()
    if len(word) != 5:
        return False
    for letter in word:
        if letter not in alphabet:
            return False
    with open(wordfile, 'r', encoding='utf-8') as words:
        wordlist = [a.strip() for a in words.readlines()]
        if word in wordlist:
            return False
    with open('suggestions.txt', 'r', encoding='utf-8') as suggestions:
        wordlist = [a.strip() for a in suggestions.readlines()]
    wordlist.append(word)
    wordlist.sort()
    with open('suggestions.txt', 'w', encoding='utf-8') as suggestions:
        for word in wordlist:
            suggestions.write(word+'\n')
    return True